#!/bin/zsh

### ~*~ tat ~*~ ###
# Use `tat blog` to connect to the `blog` session, or create a new session
# named `blog`.
#
# With no arguments, fuzzy-finds a session in a directory in $CDPATH.

_not_in_tmux(){
  [[ -z "$TMUX" ]]
}

# Attach if not in tmux, or switch if we are in tmux
_attach_to_tmux_session() {
  session=$1

  if _not_in_tmux; then
    tmux attach -d -t "$session"
  else
    tmux switch-client -t "$session"
  fi
}

_tmux_session_exists(){
  tmux list-sessions -F "#{session_name}" | egrep -q "^${1}$"
}

# Create a new tmux session with the given name.
_new_tmux_session_named() {
  new_session_name=${1//./-}

  TMUX='' tmux new-session -d -As "$new_session_name"
  _attach_to_tmux_session "$new_session_name"
}

# Try to connect to a tmux session with the given name.
# If no such session exists, create it first.
_tmux_try_to_connect_to(){
  session_to_connect_to=${1//./-}

  if _tmux_session_exists "$session_to_connect_to"; then
    _attach_to_tmux_session "$session_to_connect_to"
  else
    _new_tmux_session_named "$session_to_connect_to"
  fi
}

_current_tmux_session(){
  tmux ls -F '#S #{session_attached}' | grep 1$ | cut -d' ' -f1
}

if (( $# == 1 )); then
  _tmux_try_to_connect_to "$1"
else
  project=$(projects | fzf --reverse)

  if [[ -n "$project" && "$project" != "$(_current_tmux_session)" ]]; then
    if _tmux_session_exists "$project"; then
      tmux attach -t "$project"
    else
      (cd "$project" && _new_tmux_session_named "$project")
    fi
  fi
fi
