#!/bin/zsh

### ~*~ tat ~*~ ###
# Use `tat blog` to connect to the `blog` session, or create a new session
# named `blog`.
#
# With no arguments, fuzzy-finds a session in a directory in $JUMP_DIRECTORIES.

_not_in_tmux(){
  [[ -z "$TMUX" ]]
}

# Attach if not in tmux, or switch if we are in tmux
_attach_to_tmux_session() {
  session=$1

  if _not_in_tmux; then
    tmux attach -d -t "$session"
  else
    tmux switch-client -t "$session"
  fi
}

_tmux_session_exists(){
  tmux list-sessions -F "#{session_name}" | egrep -q "^${1}$"
}

# tmux doesn't allow . in session names
_tmux_normalize_session_name(){
  echo "${1//./-}"
}

# Create a new tmux session with the given name.
_new_tmux_session_named() {
  new_session_name=$(basename $1)

  TMUX='' tmux new-session -d -As "$new_session_name" -n "vim"
  _attach_to_tmux_session "$new_session_name"
}

# Try to connect to a tmux session with the given name.
# If no such session exists, create it first.
_tmux_try_to_connect_to(){
  if _tmux_session_exists "$1"; then
    _attach_to_tmux_session "$1"
  else
    _new_tmux_session_named "$1"
  fi
}

# Are we currently connected to the given session?
_connected_to(){
  current_tmux_session=$(tmux ls -F '#S #{session_attached}' | grep '1$' | cut -d' ' -f1)

  [[ "$1" == "$current_tmux_session" ]]
}

if (( $# == 1 )); then
  _tmux_try_to_connect_to "$(_tmux_normalize_session_name "$1")"
else
  project_directory=$(projects | fzf --reverse)

  if [[ -n "$project_directory" ]]; then
    session_name=$(_tmux_normalize_session_name "$project_directory")

    if ! _connected_to "$session_name"; then
      if _tmux_session_exists "$session_name"; then
        _attach_to_tmux_session "$session_name"
      else
        (cd "$project_directory" && _new_tmux_session_named "$session_name")
      fi
    fi
  fi
fi
